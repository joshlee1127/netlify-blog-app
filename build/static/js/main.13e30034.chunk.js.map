{"version":3,"sources":["hooks/useWindowSize.js","Header.jsx","Nav.jsx","Footer.jsx","Post.jsx","Feed.jsx","Home.jsx","NewPost.jsx","EditPost.jsx","PostPage.jsx","About.jsx","Missing.jsx","hooks/useAxiosFetch.js","App.js","api/posts.js","store.js","index.js"],"names":["useWindowSize","useState","width","undefined","height","widowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","title","className","Nav","posts","useStoreState","state","search","setSearch","useStoreActions","actions","setSearchResults","filteredResults","filter","post","body","toLowerCase","includes","reverse","onSubmit","e","preventDefault","htmlFor","id","type","placeholder","value","onChange","target","to","Footer","today","Date","postCount","getFullYear","Post","dateTime","length","slice","Feed","map","Home","isLoading","fetchError","searchResults","style","color","NewPost","history","useHistory","postTitle","postBody","savePost","setPostTitle","setPostBody","format","push","required","EditPost","useParams","editTitle","editBody","editPost","setEditTitle","setEditBody","getPostById","onClick","datetime","handleEdit","PostPage","deletePost","handleDelete","About","marginTop","Missing","useAxiosFetch","dataUrl","data","setData","setFetchError","setIsLoading","isMounted","source","axios","CancelToken","fetchData","url","a","get","cancelToken","token","response","message","cancel","App","setPosts","exact","path","component","create","baseURL","createStore","action","payload","computed","find","toString","thunk","newPost","helpers","getState","api","console","log","delete","updatedPost","put","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.13e30034.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst useWindowSize = () => {\n    const [widowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    })\n    useEffect(() => {\n        const handleResize = () => {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            })\n        }\n        handleResize()\n\n        window.addEventListener(\"resize\", handleResize)\n        /* const cleanUp = () => {\n            console.log(\"run if a useEfface dep changes\")\n            window.removeEventListener(\"resize\", handleResize)\n        } */\n        return () => window.removeEventListener(\"resize\", handleResize)\n    }, [])\n\n    return widowSize\n}\n\nexport default useWindowSize\n","import React from \"react\"\nimport { FaLaptop, FaTabletAlt, FaMobileAlt } from \"react-icons/fa\"\nimport useWindowSize from \"./hooks/useWindowSize\"\nconst Header = ({ title }) => {\n    const { width } = useWindowSize()\n    return (\n        <header className='Header'>\n            <h1>{title}</h1>\n            {width < 768 ? (\n                <FaMobileAlt />\n            ) : width < 992 ? (\n                <FaTabletAlt />\n            ) : (\n                <FaLaptop />\n            )}\n        </header>\n    )\n}\n\nexport default Header\n","import { Link } from \"react-router-dom\"\nimport { useEffect } from \"react\"\nimport { useStoreState, useStoreActions } from \"easy-peasy\"\n\nconst Nav = () => {\n    const posts = useStoreState((state) => state.posts)\n    const search = useStoreState((state) => state.search)\n    const setSearch = useStoreActions((actions) => actions.setSearch)\n    const setSearchResults = useStoreActions(\n        (actions) => actions.setSearchResults\n    )\n\n    useEffect(() => {\n        const filteredResults = posts.filter(\n            (post) =>\n                post.body.toLowerCase().includes(search.toLowerCase()) ||\n                post.title.toLowerCase().includes(search.toLowerCase())\n        )\n\n        setSearchResults(filteredResults.reverse())\n    }, [posts, search, setSearchResults])\n\n    return (\n        <nav className='Nav'>\n            <form className='searchForm' onSubmit={(e) => e.preventDefault()}>\n                <label htmlFor='search'>Search Posts</label>\n                <input\n                    id='search'\n                    type='text'\n                    placeholder='Search Posts'\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n            </form>\n            <ul>\n                <li>\n                    <Link to='/'>Home</Link>\n                </li>\n                <li>\n                    <Link to='/post'>Post</Link>\n                </li>\n                <li>\n                    <Link to='/about'>About</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav\n","import React from \"react\"\nimport { useStoreState } from \"easy-peasy\"\nconst Footer = () => {\n    const today = new Date()\n    const postCount = useStoreState((state) => state.postCount)\n    return (\n        <footer className='Footer'>\n            <p>\n                Copyright &copy; {today.getFullYear()} | {postCount} Blog Posts\n            </p>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nconst Post = ({ post }) => {\n    return (\n        <article className='post'>\n            <Link to={`/post/${post.id}`}>\n                <h2>{post.title}</h2>\n                <p className='postDate'>{post.dateTime}</p>\n            </Link>\n            <p className='postBody'>\n                {post.body.length <= 25\n                    ? post.body\n                    : `${post.body.slice(0, 25)} ...`}\n            </p>\n        </article>\n    )\n}\n\nexport default Post\n","import React from \"react\"\nimport Post from \"./Post\"\nconst Feed = ({ posts }) => {\n    return (\n        <>\n            {posts.map((post) => (\n                <Post key={post.id} post={post} />\n            ))}\n        </>\n    )\n}\n\nexport default Feed\n","import Feed from \"./Feed\"\nimport { useStoreState } from \"easy-peasy\"\n\nconst Home = ({ isLoading, fetchError }) => {\n    const searchResults = useStoreState((state) => state.searchResults)\n\n    return (\n        <main className='Home'>\n            {isLoading && <p className='statusMsg'>Loading posts...</p>}\n            {!isLoading && fetchError && (\n                <p className='statusMsg' style={{ color: \"red\" }}>\n                    {fetchError}\n                </p>\n            )}\n            {!isLoading &&\n                !fetchError &&\n                (searchResults.length ? (\n                    <Feed posts={searchResults} />\n                ) : (\n                    <p className='statusMsg'>No posts to display.</p>\n                ))}\n        </main>\n    )\n}\n\nexport default Home\n","import React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { format } from \"date-fns\"\n\nimport { useStoreState, useStoreActions } from \"easy-peasy\"\n\nconst NewPost = () => {\n    const history = useHistory()\n    const posts = useStoreState((state) => state.posts)\n    const postTitle = useStoreState((state) => state.postTitle)\n    const postBody = useStoreState((state) => state.postBody)\n\n    const savePost = useStoreActions((actions) => actions.savePost)\n    const setPostTitle = useStoreActions((actions) => actions.setPostTitle)\n    const setPostBody = useStoreActions((actions) => actions.setPostBody)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const id = posts.length ? posts[posts.length - 1].id + 1 : 1\n        const dateTime = format(new Date(), \"MMMM dd, yyyy pp\")\n        const newPost = { id, title: postTitle, dateTime, body: postBody }\n        savePost(newPost)\n        history.push(\"/\")\n    }\n    return (\n        <main className='NewPost'>\n            <h2>New Post</h2>\n            <form className='newPostForm' onSubmit={handleSubmit}>\n                <label htmlFor='postTitle'>Title:</label>\n                <input\n                    type='text'\n                    id='postTitle'\n                    required\n                    value={postTitle}\n                    onChange={(e) => setPostTitle(e.target.value)}\n                />\n                <label htmlFor='postBody'>Body:</label>\n                <textarea\n                    id='postBody'\n                    required\n                    value={postBody}\n                    onChange={(e) => setPostBody(e.target.value)}></textarea>\n\n                <button type='submit'>Submit</button>\n            </form>\n        </main>\n    )\n}\n\nexport default NewPost\n","import { useEffect } from \"react\"\nimport { useParams, Link, useHistory } from \"react-router-dom\"\nimport { format } from \"date-fns\"\nimport { useStoreState, useStoreActions } from \"easy-peasy\"\n\nconst EditPost = () => {\n    const history = useHistory()\n    const { id } = useParams()\n\n    const editTitle = useStoreState((state) => state.editTitle)\n    const editBody = useStoreState((state) => state.editBody)\n\n    const editPost = useStoreActions((actions) => actions.editPost)\n    const setEditTitle = useStoreActions((actions) => actions.setEditTitle)\n    const setEditBody = useStoreActions((actions) => actions.setEditBody)\n\n    const getPostById = useStoreState((state) => state.getPostById)\n    const post = getPostById(id)\n\n    useEffect(() => {\n        if (post) {\n            setEditTitle(post.title)\n            setEditBody(post.body)\n        }\n    }, [post, setEditTitle, setEditBody])\n\n    const handleEdit = (id) => {\n        const datetime = format(new Date(), \"MMMM dd, yyyy pp\")\n        const updatedPost = { id, title: editTitle, datetime, body: editBody }\n        editPost(updatedPost)\n        history.push(`/post/${id}`)\n    }\n\n    return (\n        <main className='NewPost'>\n            {editTitle && (\n                <>\n                    <h2>Edit Post</h2>\n                    <form\n                        className='newPostForm'\n                        onSubmit={(e) => e.preventDefault()}>\n                        <label htmlFor='postTitle'>Title:</label>\n                        <input\n                            id='postTitle'\n                            type='text'\n                            required\n                            value={editTitle}\n                            onChange={(e) => setEditTitle(e.target.value)}\n                        />\n                        <label htmlFor='postBody'>Post:</label>\n                        <textarea\n                            id='postBody'\n                            required\n                            value={editBody}\n                            onChange={(e) => setEditBody(e.target.value)}\n                        />\n                        <button\n                            type='button'\n                            onClick={() => handleEdit(post.id)}>\n                            Submit\n                        </button>\n                    </form>\n                </>\n            )}\n            {!editTitle && (\n                <>\n                    <h2>Post Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            )}\n        </main>\n    )\n}\n\nexport default EditPost\n","import { useParams, Link, useHistory } from \"react-router-dom\"\nimport { useStoreState, useStoreActions } from \"easy-peasy\"\n\nconst PostPage = () => {\n    const { id } = useParams()\n    const history = useHistory()\n    const deletePost = useStoreActions((actions) => actions.deletePost)\n    const getPostById = useStoreState((state) => state.getPostById)\n    const post = getPostById(id)\n    const handleDelete = (id) => {\n        deletePost(id)\n        history.push(\"/\")\n    }\n\n    return (\n        <main className='PostPage'>\n            <article className='post'>\n                {post && (\n                    <>\n                        <h2>{post.title}</h2>\n                        <p className='postData'>{post.dateTime}</p>\n                        <p className='postBody'>{post.body}</p>\n                        <Link to={`/edit/${post.id}`}>\n                            <button className='editButton'>Edit</button>\n                        </Link>\n                        <button\n                            className='deleteButton'\n                            onClick={(e) => {\n                                handleDelete(post.id)\n                            }}>\n                            Delete Post\n                        </button>\n                    </>\n                )}\n                {!post && (\n                    <>\n                        <h2>Post Not Found</h2>\n                        <p>Well, that's disappointing.</p>\n                        <p>\n                            <Link to='/'>Visit Our HomePage</Link>\n                        </p>\n                    </>\n                )}\n            </article>\n        </main>\n    )\n}\n\nexport default PostPage\n","import React from \"react\"\n\nconst About = () => {\n    return (\n        <main className='About'>\n            <h2>About</h2>\n            <p style={{ marginTop: \"10rem\" }}>\n                This blog app is a project in the learn react series\n            </p>\n        </main>\n    )\n}\n\nexport default About\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nconst Missing = () => {\n    return (\n        <main className='Missing'>\n            <h2>Page Not Found</h2>\n            <p>Well, that disappointing</p>\n            <p>\n                <Link to='/'>Visit HomePage</Link>\n            </p>\n        </main>\n    )\n}\n\nexport default Missing\n","import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nconst useAxiosFetch = (dataUrl) => {\n    const [data, setData] = useState([])\n    const [fetchError, setFetchError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        let isMounted = true\n        const source = axios.CancelToken.source()\n        const fetchData = async (url) => {\n            setIsLoading(true)\n            try {\n                const response = await axios.get(url, {\n                    cancelToken: source.token,\n                })\n                if (isMounted) {\n                    setData(response.data)\n                    setFetchError(null)\n                }\n            } catch (err) {\n                if (isMounted) {\n                    setFetchError(err.message)\n                    setData([])\n                }\n            } finally {\n                isMounted && setIsLoading(false)\n            }\n        }\n        fetchData(dataUrl)\n        const cleanUp = () => {\n            isMounted = false\n            source.cancel()\n        }\n        return cleanUp\n    }, [dataUrl])\n    return { data, fetchError, isLoading }\n}\n\nexport default useAxiosFetch\n","import { Route, Switch } from \"react-router-dom\"\n\nimport Header from \"./Header\"\nimport Nav from \"./Nav\"\nimport Footer from \"./Footer\"\nimport Home from \"./Home\"\nimport NewPost from \"./NewPost\"\nimport EditPost from \"./EditPost\"\nimport PostPage from \"./PostPage\"\nimport About from \"./About\"\nimport Missing from \"./Missing\"\nimport { useEffect } from \"react\"\nimport useAxiosFetch from \"./hooks/useAxiosFetch\"\nimport { useStoreActions } from \"easy-peasy\"\nconst App = () => {\n    const setPosts = useStoreActions((actions) => actions.setPosts)\n    const { data, fetchError, isLoading } = useAxiosFetch(\n        \"http://localhost:3500/posts\"\n    )\n    useEffect(() => {\n        setPosts(data)\n    }, [data, setPosts])\n    return (\n        <div className='App'>\n            <Header title='JS Blog' />\n            <Nav />\n            <Switch>\n                <Route exact path='/'>\n                    <Home isLoading={isLoading} fetchError={fetchError} />\n                </Route>\n                <Route exact path='/post' component={NewPost} />\n                <Route path='/edit/:id' component={EditPost} />\n                <Route path='/post/:id' component={PostPage} />\n                <Route path='/about' component={About} />\n                <Route path='/*' component={Missing} />\n            </Switch>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default App\n","import axios from \"axios\"\n\nexport default axios.create({\n    baseURL: \"http://localhost:3500/\",\n})\n","import { createStore, action, thunk, computed } from \"easy-peasy\"\nimport api from \"./api/posts\"\n\nexport default createStore({\n    posts: [],\n    setPosts: action((state, payload) => {\n        state.posts = payload\n    }),\n    postTitle: \"\",\n    setPostTitle: action((state, payload) => {\n        state.postTitle = payload\n    }),\n    postBody: \"\",\n    setPostBody: action((state, payload) => {\n        state.postBody = payload\n    }),\n    editTitle: \"\",\n    setEditTitle: action((state, payload) => {\n        state.editTitle = payload\n    }),\n    editBody: \"\",\n    setEditBody: action((state, payload) => {\n        state.editBody = payload\n    }),\n    search: \"\",\n    setSearch: action((state, payload) => {\n        state.search = payload\n    }),\n    searchResults: [],\n    setSearchResults: action((state, payload) => {\n        state.searchResults = payload\n    }),\n    postCount: computed((state) => state.posts.length),\n    getPostById: computed((state) => {\n        return (id) => state.posts.find((post) => post.id.toString() === id)\n    }),\n    savePost: thunk(async (actions, newPost, helpers) => {\n        const { posts } = helpers.getState()\n        try {\n            const response = await api.post(\"/posts\", newPost)\n            actions.setPosts([...posts, response.data])\n            actions.setPostTitle(\"\")\n            actions.setPostBody(\"\")\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }),\n    deletePost: thunk(async (actions, id, helpers) => {\n        const { posts } = helpers.getState()\n        try {\n            await api.delete(`/posts/${id}`)\n            actions.setPosts(posts.filter((post) => post.id !== id))\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }),\n    editPost: thunk(async (actions, updatedPost, helpers) => {\n        const { posts } = helpers.getState()\n        const { id } = updatedPost\n        try {\n            const response = await api.put(`/posts/${id}`, updatedPost)\n            actions.setPosts(\n                posts.map((post) =>\n                    post.id === id ? { ...response.data } : post\n                )\n            )\n            actions.setEditTitle(\"\")\n            actions.setEditBody(\"\")\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }),\n})\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { StoreProvider } from \"easy-peasy\"\nimport store from \"./store\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider store={store}>\n            <Router>\n                <Route path='/' component={App} />\n            </Router>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}